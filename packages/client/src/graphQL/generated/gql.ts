/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "fragment EmployeeFragment on Employee {\n  employee_id\n  id\n  partial_password\n  role\n  status\n  profile {\n    first_name\n    id\n    middle_name\n    last_name\n  }\n}": types.EmployeeFragmentFragmentDoc,
    "fragment StudentFragment on Student {\n  id\n  LRN\n  first_name\n  middle_name\n  last_name\n  gender\n  birthday\n  contact_number\n  email\n  enrollment_records {\n    id\n    SY\n    grade_level_id\n    section_id\n    payment_status\n  }\n  address {\n    id\n    no\n    street\n    subdiv\n    barangay\n    city\n    province\n    region\n    zip\n  }\n  parent_guardians {\n    id\n    first_name\n    middle_name\n    last_name\n    contact_number\n    email\n    type\n  }\n  requirements {\n    id\n    has_form_137\n    has_psa\n    has_parent_marriage_contract\n    has_report_card\n    has_report_of_rating\n    has_good_moral\n    has_school_government_recognition\n    has_baptismal\n  }\n  school_records {\n    id\n    sy_graduated\n    school_name\n    type\n  }\n  transfer_records {\n    id\n    sy_entered\n    sy_exit\n  }\n  status\n}": types.StudentFragmentFragmentDoc,
    "mutation addEmployee($input: addEmployeeInput!) {\n  addEmployee(input: $input) {\n    employee_id\n    id\n    profile {\n      first_name\n      last_name\n      middle_name\n    }\n    role\n    status\n    partial_password\n  }\n}": types.AddEmployeeDocument,
    "mutation addStudent($input: StudentInput!) {\n  addStudent(input: $input) {\n    ...StudentFragment\n  }\n}": types.AddStudentDocument,
    "mutation authMutation($input: AuthInput!) {\n  auth(input: $input) {\n    needNewPassword\n    token\n  }\n}": types.AuthMutationDocument,
    "mutation disableEmployee($employeeId: String!) {\n  disableEmployee(employee_id: $employeeId)\n}": types.DisableEmployeeDocument,
    "mutation enableEmployee($employeeId: String!) {\n  enableEmployee(employee_id: $employeeId)\n}": types.EnableEmployeeDocument,
    "query GetMe {\n  getMe {\n    employee_id\n    id\n    profile {\n      first_name\n      last_name\n      middle_name\n    }\n    role\n  }\n}": types.GetMeDocument,
    "query getAuditTrails($limit: Int, $search: String, $offset: Int, $filter: auditTrailFilter) {\n  getAuditTrails(limit: $limit, search: $search, offset: $offset, filter: $filter) {\n    length\n    audit_trail {\n      action_type\n      description\n      employee {\n        ...EmployeeFragment\n      }\n      timestamp\n      id\n    }\n  }\n}": types.GetAuditTrailsDocument,
    "query getEmployees($limit: Int, $offset: Int, $search: String, $filter: employeesFilter) {\n  getEmployees(limit: $limit, offset: $offset, search: $search, filter: $filter) {\n    length\n    employees {\n      ...EmployeeFragment\n    }\n  }\n}": types.GetEmployeesDocument,
    "query getGlobalVars {\n  getGlobalVars {\n    audit_trail_types\n    school_year\n  }\n}": types.GetGlobalVarsDocument,
    "query GetStudent($sid: String!) {\n  getStudent(SID: $sid) {\n    ...StudentFragment\n  }\n}": types.GetStudentDocument,
    "query getStudents($limit: Int, $search: String, $offset: Int) {\n  getStudents(limit: $limit, search: $search, offset: $offset) {\n    length\n    students {\n      ...StudentFragment\n    }\n  }\n}": types.GetStudentsDocument,
    "query Ping {\n  meow\n}": types.PingDocument,
    "query Query {\n  test\n}": types.QueryDocument,
};

export function graphql(source: "fragment EmployeeFragment on Employee {\n  employee_id\n  id\n  partial_password\n  role\n  status\n  profile {\n    first_name\n    id\n    middle_name\n    last_name\n  }\n}"): (typeof documents)["fragment EmployeeFragment on Employee {\n  employee_id\n  id\n  partial_password\n  role\n  status\n  profile {\n    first_name\n    id\n    middle_name\n    last_name\n  }\n}"];
export function graphql(source: "fragment StudentFragment on Student {\n  id\n  LRN\n  first_name\n  middle_name\n  last_name\n  gender\n  birthday\n  contact_number\n  email\n  enrollment_records {\n    id\n    SY\n    grade_level_id\n    section_id\n    payment_status\n  }\n  address {\n    id\n    no\n    street\n    subdiv\n    barangay\n    city\n    province\n    region\n    zip\n  }\n  parent_guardians {\n    id\n    first_name\n    middle_name\n    last_name\n    contact_number\n    email\n    type\n  }\n  requirements {\n    id\n    has_form_137\n    has_psa\n    has_parent_marriage_contract\n    has_report_card\n    has_report_of_rating\n    has_good_moral\n    has_school_government_recognition\n    has_baptismal\n  }\n  school_records {\n    id\n    sy_graduated\n    school_name\n    type\n  }\n  transfer_records {\n    id\n    sy_entered\n    sy_exit\n  }\n  status\n}"): (typeof documents)["fragment StudentFragment on Student {\n  id\n  LRN\n  first_name\n  middle_name\n  last_name\n  gender\n  birthday\n  contact_number\n  email\n  enrollment_records {\n    id\n    SY\n    grade_level_id\n    section_id\n    payment_status\n  }\n  address {\n    id\n    no\n    street\n    subdiv\n    barangay\n    city\n    province\n    region\n    zip\n  }\n  parent_guardians {\n    id\n    first_name\n    middle_name\n    last_name\n    contact_number\n    email\n    type\n  }\n  requirements {\n    id\n    has_form_137\n    has_psa\n    has_parent_marriage_contract\n    has_report_card\n    has_report_of_rating\n    has_good_moral\n    has_school_government_recognition\n    has_baptismal\n  }\n  school_records {\n    id\n    sy_graduated\n    school_name\n    type\n  }\n  transfer_records {\n    id\n    sy_entered\n    sy_exit\n  }\n  status\n}"];
export function graphql(source: "mutation addEmployee($input: addEmployeeInput!) {\n  addEmployee(input: $input) {\n    employee_id\n    id\n    profile {\n      first_name\n      last_name\n      middle_name\n    }\n    role\n    status\n    partial_password\n  }\n}"): (typeof documents)["mutation addEmployee($input: addEmployeeInput!) {\n  addEmployee(input: $input) {\n    employee_id\n    id\n    profile {\n      first_name\n      last_name\n      middle_name\n    }\n    role\n    status\n    partial_password\n  }\n}"];
export function graphql(source: "mutation addStudent($input: StudentInput!) {\n  addStudent(input: $input) {\n    ...StudentFragment\n  }\n}"): (typeof documents)["mutation addStudent($input: StudentInput!) {\n  addStudent(input: $input) {\n    ...StudentFragment\n  }\n}"];
export function graphql(source: "mutation authMutation($input: AuthInput!) {\n  auth(input: $input) {\n    needNewPassword\n    token\n  }\n}"): (typeof documents)["mutation authMutation($input: AuthInput!) {\n  auth(input: $input) {\n    needNewPassword\n    token\n  }\n}"];
export function graphql(source: "mutation disableEmployee($employeeId: String!) {\n  disableEmployee(employee_id: $employeeId)\n}"): (typeof documents)["mutation disableEmployee($employeeId: String!) {\n  disableEmployee(employee_id: $employeeId)\n}"];
export function graphql(source: "mutation enableEmployee($employeeId: String!) {\n  enableEmployee(employee_id: $employeeId)\n}"): (typeof documents)["mutation enableEmployee($employeeId: String!) {\n  enableEmployee(employee_id: $employeeId)\n}"];
export function graphql(source: "query GetMe {\n  getMe {\n    employee_id\n    id\n    profile {\n      first_name\n      last_name\n      middle_name\n    }\n    role\n  }\n}"): (typeof documents)["query GetMe {\n  getMe {\n    employee_id\n    id\n    profile {\n      first_name\n      last_name\n      middle_name\n    }\n    role\n  }\n}"];
export function graphql(source: "query getAuditTrails($limit: Int, $search: String, $offset: Int, $filter: auditTrailFilter) {\n  getAuditTrails(limit: $limit, search: $search, offset: $offset, filter: $filter) {\n    length\n    audit_trail {\n      action_type\n      description\n      employee {\n        ...EmployeeFragment\n      }\n      timestamp\n      id\n    }\n  }\n}"): (typeof documents)["query getAuditTrails($limit: Int, $search: String, $offset: Int, $filter: auditTrailFilter) {\n  getAuditTrails(limit: $limit, search: $search, offset: $offset, filter: $filter) {\n    length\n    audit_trail {\n      action_type\n      description\n      employee {\n        ...EmployeeFragment\n      }\n      timestamp\n      id\n    }\n  }\n}"];
export function graphql(source: "query getEmployees($limit: Int, $offset: Int, $search: String, $filter: employeesFilter) {\n  getEmployees(limit: $limit, offset: $offset, search: $search, filter: $filter) {\n    length\n    employees {\n      ...EmployeeFragment\n    }\n  }\n}"): (typeof documents)["query getEmployees($limit: Int, $offset: Int, $search: String, $filter: employeesFilter) {\n  getEmployees(limit: $limit, offset: $offset, search: $search, filter: $filter) {\n    length\n    employees {\n      ...EmployeeFragment\n    }\n  }\n}"];
export function graphql(source: "query getGlobalVars {\n  getGlobalVars {\n    audit_trail_types\n    school_year\n  }\n}"): (typeof documents)["query getGlobalVars {\n  getGlobalVars {\n    audit_trail_types\n    school_year\n  }\n}"];
export function graphql(source: "query GetStudent($sid: String!) {\n  getStudent(SID: $sid) {\n    ...StudentFragment\n  }\n}"): (typeof documents)["query GetStudent($sid: String!) {\n  getStudent(SID: $sid) {\n    ...StudentFragment\n  }\n}"];
export function graphql(source: "query getStudents($limit: Int, $search: String, $offset: Int) {\n  getStudents(limit: $limit, search: $search, offset: $offset) {\n    length\n    students {\n      ...StudentFragment\n    }\n  }\n}"): (typeof documents)["query getStudents($limit: Int, $search: String, $offset: Int) {\n  getStudents(limit: $limit, search: $search, offset: $offset) {\n    length\n    students {\n      ...StudentFragment\n    }\n  }\n}"];
export function graphql(source: "query Ping {\n  meow\n}"): (typeof documents)["query Ping {\n  meow\n}"];
export function graphql(source: "query Query {\n  test\n}"): (typeof documents)["query Query {\n  test\n}"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;